---
title: '🏍️ Modelling Riders Performance'
subtitle: 'Leveraging public race data to boost fans interest in motorsports'
abstract: 'Dwelving in the world of MotoGP racing, I illustrate how making use of public race data can provide fans with a more structured and comprehensive understanding of the objective performance of race competitors.'
author: 'Antonio Buzzelli'
date: "2023-05-01"
jupyter: python3
# code-fold: true
# draft: true
image: "../../_freeze/posts/motogp-performance/performance/figure-html/cell-16-output-1.png"
categories: [motogpdata, Motorsports, Public Data, Python]
---

Sports are being radically transformed by data collection and analysis, benefiting both professionals and fans. Soccer, baseball, and American football are some examples where player performance data is utilized to acquire talent and provide in-depth statistics for the public. In contrast, data analysis for motorsports fans is not yet widespread, despite being fundamental to the sport's operation. 

In this notebook, we will explore the realm of MotoGP racing and analyze publicly available race data with the aim of comprehending how it can be used to provide fans with essential **insights on riders' performance**. By employing statistical methodologies, we will extract as much insights as possible from the openly accessible data, contending that it is possible to gauge the riders' objective performances within a race and across the championship. At the same time, we will propose potential data analyses – presented as a "post-GP" information product – that can be used by the media to interpret Grand Prix outcomes and which can spark engaging discussions on the competitors' performance levels and progress.

> *Data is provided thanks to the [motogpdata](https://github.com/antobzzll/motogpdata) project.*

# Key findings and achievements
* For the purpose of providing more technical and structured insights to fans, we demonstrate how public race data can be used to extract important information on race and rider performance.
* We demonstrate how to **quantify the performances** of riders, teams, and constructors through **quantitative indicators** that take into account **relative speed and consistency**, the two fundamental variables in the theoretical definition of "performance."

___


```{python}
import motogpdata.handler as mgphandler
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
```

# Race Results

For the scope of this study, we will take into account and examine two races from the 2022 MotoGP season, namely the Qatar Grand Prix and the Italian Grand Prix. Let's first refresh our memory of the results of these races.

For the Qatar Grand Prix:

```{python}
season = mgphandler.Season(2022, 'MotoGP')
qat2022 = mgphandler.Event(season, 'QAT')
ita2022 = mgphandler.Event(season, 'ITA')
```

```{python}
results_subset = ['rider.full_name', 'position', 'average_speed', 'total_laps', 'time', 'points']
qat2022.results()[results_subset].set_index('rider.full_name')
```

For the Italian Grand Prix:

```{python}
ita2022.results()[results_subset].set_index('rider.full_name')
```

The traditional race classification tables (which represent the only type of data considered by most of the media when reporting on races) do not provide many analytical insights nor objective indicators of riders performances. They merely offer a snapshot of the race outcome; and the final result does not provide a comprehensive evaluation of the competitors' achievements in the race.

It is in fact possible for a rider to finish a race in a certain position thanks to the mistakes of others, even if he has maintained an anonymous performance throughout the race. In such situations, the most common question that arises is whether or not the rider "deserved" or not the position he achieved at the end of the race. In other words, we ask: what was the rider's performance after accounting for the race events? How can we measure and evaluate he's performance regardless of the result obtained?

# Laptime analysis

A statistical assessment of race performance is required to address these inquiries, which entails an evaluation based on factual data rather than subjective sentiments or judgments. To accomplish this, the data on lap times must be taken into account, scrutinizing the race's overall progress. An illustration of such data for the Qatar race is presented below.

```{python}
# Extract race analysis data for the Qatar Grand Prix
timesheetQAT, laptimes_ridersQAT, laptimes_teamsQAT, laptimes_constructorsQAT, performanceQAT = qat2022.race_analysis(save_pdf=False, performance=True)
laptimes_ridersQAT_melted = laptimes_ridersQAT.melt(id_vars='lap', var_name='rider', value_name='laptime')
```

```{python}
laptimes_ridersQAT.head()
```

The above table (in its comprehensive form) shows the lap times of each rider (expressed in seconds), and provides already a good starting point for deepening the understanding of the time trends and the general race progression. From such data, it is possible to generate some of the following visualizations.

```{python}
sns.relplot(data=laptimes_ridersQAT_melted[laptimes_ridersQAT_melted['rider'].isin(
    ['avg_laptime', 'Enea Bastianini', 'Aleix Espargaro', 'Raul Fernandez'])], 
            x='lap', y='laptime', hue='rider', kind='line', 
            palette=['green', 'red', 'darkorange', 'grey'], aspect=1.5)

plt.title("Qatar 2022\nComparative Lap Time Analysis - Riders")
plt.xlabel("Laps")
plt.ylabel("Lap times (in seconds)")
plt.show()
```

By projecting the *average lap time* (gray line), we can appreciate the general trend of the race. For example, in the case of Qatar, there is a decline in overall performance starting from the seventeenth lap. Similarly, there is a significant performance drop in the Italian Grand Prix race starting from the sixteenth lap. **This analysis helps to evaluate tire performance**.

Regarding the personal lap times of the riders, we can notice that both Enea Bastianini (who arrived in 1st place) and Aleix Espargaro (who arrived in 4th place) performed well below the average (gray line), unlike Raul Fernandez, for example (orange line), who consistently raced above the general average of the competition. Similar considerations can also be applied to the Italian Grand Prix, as shown below.

```{python}
timesheetITA, laptimes_ridersITA, laptimes_teamsITA, laptimes_constructorsITA, performanceITA = ita2022.race_analysis(save_pdf=False, performance=True)
laptimes_ridersITA_melted = laptimes_ridersITA.melt(id_vars='lap', var_name='rider', value_name='laptime')
```

```{python}
sns.relplot(data=laptimes_ridersITA_melted[laptimes_ridersITA_melted['rider'].isin(
    ['avg_laptime', 'Francesco Bagnaia', 'Fabio Quartararo', 'Andrea Dovizioso'])], 
            x='lap', y='laptime', hue='rider', kind='line', 
            palette=['aqua', 'blue', 'red', 'grey'], aspect=1.5)

plt.title("Mugello 2022\nComparative Lap Time Analysis - Riders")
plt.xlabel("Laps")
plt.ylabel("Lap times (in seconds)")
plt.show()
```

These graphs provide a visual and intuitive way to determine if a particular rider, team, or manufacturer has performed above, below, or at an average level. (It's important to note that the more a rider's lap times are below the average race's lap time, the faster they've gone). Using the same visualization concept for the concstructors, we can see how Yamaha and KTM consistently performed above average in the Qatar 2022 race, thus indicating that they "underperformed" compared to the other manufacturers.

```{python}
laptimes_constructorsQAT_melted = laptimes_constructorsQAT.melt(id_vars='lap', var_name='constructor', value_name='laptime')

sns.relplot(data=laptimes_constructorsQAT_melted[laptimes_constructorsQAT_melted['constructor'].isin(
    ['avg_laptime', 'Yamaha', 'KTM'])], 
            x='lap', y='laptime', hue='constructor', kind='line', 
            palette=['darkorange', 'blue', 'grey'], aspect=1.5)

plt.title("Qatar 2022\nComparative Lap Time Analysis - Constructors")
plt.xlabel("Laps")
plt.ylabel("Lap times (in seconds)")
plt.show()
```

## Sector times

In an aggregate manner, it is also possible to determine variation indicators for each sector of the circuit, thereby appreciating the overall level of consistency of the riders in the various sections of the track. For example, we can observe that in the case of the Qatar Grand Prix, the consistency of lap times in different sectors is almost identical, while at Mugello, the sector in which the drivers were on average more consistent is T2.

```{python}
std_race = pd.DataFrame(timesheetQAT[timesheetQAT['lap'] != 1][['t1', 't2', 't3', 't4']].std())
std_race = std_race.pivot_table(columns=std_race.index).round(2)
std_race.index = ['σ']
print("🇶🇦 Qatar Grand Prix 2022\nSector Pace:")
std_race
```

```{python}
std_race = pd.DataFrame(timesheetITA[timesheetITA['lap'] != 1][['t1', 't2', 't3', 't4']].std())
std_race = std_race.pivot_table(columns=std_race.index).round(2)
std_race.index = ['σ']
print("🇮🇹 Italian Grand Prix 2022\nSector pace:")
std_race
```

The same principle of analysis can be applied to the fastest times set by riders in the different sectors of the track. At the Mugello Grand Prix, we can see, for example, how Yamaha, with Fabio Quartararo, was the fastest in T2 and T3. In contrast, the Ducatis of Bagnaia and Bastianini expressed the best times in the sectors with higher top speeds (T1 and T4).

```{python}
by_rider = timesheetITA[timesheetITA['lap'] != 1].groupby(['constructor', 'rider'])[['t1', 't2', 't3', 't4']].min().round(3)
rider_with_min = by_rider.idxmin()
const_t = pd.DataFrame({
    'rider': rider_with_min, 
    'fastest_time': by_rider.min()})
const_t[['constructor', 'rider']] = pd.DataFrame(const_t['rider'].tolist(), index=const_t.index)
print("🇮🇹 Italian Grand Prix 2022\nFastest sector times:\n")
print(const_t[['constructor', 'rider', 'fastest_time']])
```

In general, analyzing sector times under different measures of aggregation (average time, minimum, maximum, consistency in terms of standard deviation, etc.) can reveal interesting points of comparison to evaluate the adaptation to the track of riders, teams, and constructors.

# Performance analysis

Although an analysis of times like this already gives a clear idea of the general trend of the race, it alone cannot provide an answer to our initial question. In fact, to quantify riders' performances, it is necessary to deepen the analysis and develop quantitative indicators.

## The Performance Matrix

Motorsports performance, can be defined as "*how consistently fast a rider has been*" - relative to the number of laps completed. Therefore, at a conceptual level, the so-called "pace" can be theorized as the aggregation of two fundamental variables: consistency and speed. To achieve high positions in the rankings, a rider must in fact be both fast and consistent.

Visually, the relationship between these two variables can be demonstrated with the help of a matrix - shown below - which we will call the "performance matrix". The graph represents the ratio between the two indicators (*relative speed* on the y-axis and *relative consistency* on the x-axis) for each participant in the race, in relation to their average located at the axes $x,y=0$ (black lines). This means that the performance of the riders located in the upper-right quadrant of the graph are above average, both in terms of speed and consistency. Conversely, those located in the lower-left quadrant have "underperformed" below average (for both variables).

```{python}
perf_cols = ['rider', 'constructor', 'grid', 'position', 'pos_delta', 'points', 'avg_laptime', 'avg_speed', 'delta_avg_laptime', 'pace_speed_index', 'delta_std_laptime', 'pace_consistency_index', 'performance_index']
performanceQAT = performanceQAT[perf_cols].set_index('rider').round(2)
performanceITA = performanceITA[perf_cols].set_index('rider').round(2)
performanceITA.loc[performanceITA.index == 'Lorenzo Savadori', 'constructor'] = 'Aprilia'
```

```{python}
sns.relplot(data=performanceQAT, 
            x='pace_consistency_index', 
            y='pace_speed_index', hue='constructor', 
            palette=['red', 'darkorange', 'orange', 'green', 'aqua', 'blue'], 
            # size='points', 
            # sizes=[30, 80], 
            # alpha=0.8, 
            legend='brief', aspect=1.5)

plt.title("Qatar 2022\nPerformance Matrix - Riders")
plt.xlabel("Relative Consistency Indicator (in seconds)")
plt.ylabel("Relative Speed Indicator (in seconds)")

plt.axhline(y=0, color='black', linestyle='-', linewidth=2)
plt.axvline(x=0, color='black', linestyle='-', linewidth=2)

plt.show()
```

In the case of Qatar, we can see how this graph helps us clearly visualize the struggle of the Ducati teams in having a consistent pace (with the exception of the winner, Bastianini). The Suzuki team had a good overall performance, both in terms of speed and consistency.

```{python}
sns.relplot(data=performanceITA[performanceITA['performance_index'] > -3], 
            x='pace_consistency_index', 
            y='pace_speed_index', hue='constructor', 
            palette=['red', 'blue', 'green', 'darkorange', 'orange', 'aqua'], 
            # size='points', 
            # sizes=[30, 80], 
            # alpha=0.8, 
            legend='brief', aspect=1.5)

plt.title("Mugello 2022\nPerformance Matrix - Riders")
plt.xlabel("Relative Consistency Indicator (in seconds)")
plt.ylabel("Relative Speed Indicator (in seconds)")

plt.axhline(y=0, color='black', linestyle='-', linewidth=2)
plt.axvline(x=0, color='black', linestyle='-', linewidth=2)

plt.show()
```

At Mugello, it's interesting to note how the riders who scored points are all grouped in the upper-right quadrant, which means their values for speed and consistency were above average (confirming the demonstrated relationship between the two variables). Only Quartararo (who finished second) demonstrated both consistency and speed among the Yamaha riders, while the other three Yamahas suffered from a noticeable lack of speed that prevented them from scoring points. The Ducati team had a good overall performance, with most of their riders largely confirming their high performance usually demonstrated at their home circuit.

## A performance-based ranking

The two variables that quantify the "pace" can be combined to create an index that summarizes a rider's performance in a single value. We will call this the "performance indicator", which is an aggregation of the speed and consistency indicators of the pace.

The following table shows the results of the Qatar race along with these indicators. Specifically, from left to right, it includes the starting position, finishing position, difference in positions at the finish, points earned, speed indicator, consistency indicator, and the aggregated performance indicator. This results table, ordered by the latter variable, presents a "revisited" ranking based on the performance demonstrated by the riders regardless of the final result and events of the race.

```{python}
perfQAT = performanceQAT.drop(columns=[
    'avg_speed', 'avg_laptime', 'delta_avg_laptime',
    'delta_std_laptime']).sort_values('performance_index', ascending=False).reset_index()
perfQAT.index += 1
perfQAT.drop(columns='constructor')
```

In this "new" ranking (sorted by the aggregated performance indicator), it is interesting to note that the winner (Enea Bastianini), who dominated the race from the first position since the beginning, is relegated to the third position behind Brad Binder and Pol Espargaro. This is due to the fact that these two riders have shown to have a greater speed and consistency than Enea, who, apart from the victory, has equalled the performance of Marc Marquez.

The same concept is applied to the race performances of the constructors in the following table.

```{python}
perfQAT_constr = perfQAT.groupby('constructor')[['pace_speed_index', 'pace_consistency_index', 'performance_index']].mean().sort_values('performance_index', ascending=False).round(2)
# perfQAT_constr = perfQAT_constr.sort_values('performance_index', ascending=False).reset_index()
# perfQAT_constr.index += 1
perfQAT_constr
```

```{python}
sns.relplot(data=perfQAT_constr, 
            x='pace_consistency_index', 
            y='pace_speed_index', hue='constructor', 
            palette=['aqua', 'orange', 'green', 'blue', 'red', 'darkorange'], 
            # size='points', 
            # sizes=[30, 80], 
            # alpha=0.8, 
            legend='brief', aspect=1.5)

plt.title("Qatar 2022\nPerformance Matrix - Constructors")
plt.xlabel("Relative Consistency Indicator (in seconds)")
plt.ylabel("Relative Speed Indicator (in seconds)")

plt.axhline(y=0, color='black', linestyle='-', linewidth=2)
plt.axvline(x=0, color='black', linestyle='-', linewidth=2)

plt.show()
```

As we can see, thanks in part to the performance matrix applied to the constructors, Suzuki was the most "performant" motorcycle in Qatar 2022, along with Honda and Aprilia. Ducati, Yamaha, and KTM had subpar performances.

# Conclusion

For the purpose of providing more technical and structured motorsports information to fans, we have demonstrated in this article how public data can be used to extract important information on race and rider performance. While the race results remain undoubtedly the reference for assigning race points, it is still crucial to be able to objectively measure and evaluate the "pace" of the riders, regardless of the checkered flag and race events. By examining two MotoGP races in the 2022 season, we first established the **importance of visually analyzing the race progression** in terms of lap times in order to:

* Examine the overall **evolution of tire performance and degradation**;
* **Compare** the **lap time** evolution of riders, teams, and constructors (also in relation to the average).

We then demonstrated how lap data can be used to analyze the adaptation of riders, teams, and constructors to different track segments, with the help of aggregate metrics for intermediate sector times.

Finally, we demonstrated the usefulness of **quantifying the performances** of riders, teams, and constructors through **quantitative indicators** that take into account **relative speed and consistency**, the two fundamental variables in the theoretical definition of "performance."

In conclusion, the research findings confirm the validity of the initial hypothesis and provide a satisfying answer to the questions that were posed at the beginning of the investigation. It is also believed that this study constitutes an important starting point for the creation of an engaging technical information format for motor racing. The ultimate goal is to promote a constructive and informed debate among industry experts and enthusiasts, providing objective information that allows for statistical evaluation of the performances of riders and vehicles. In this way, we could contribute to fostering a more aware and informed motor racing culture, capable of fully appreciating the technical complexity of this type of sport, especially for those more demanding fans.

